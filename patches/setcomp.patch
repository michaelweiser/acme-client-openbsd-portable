--- util.c
+++ util.c
@@ -311,3 +311,11 @@ checkexit_ext(int *rc, pid_t pid, enum comp comp)
 	}
 	return 1;
 }
+
+/* Set the component identifier of this process. Set program name as a side
+ * effect so that log messages show the component name for easier
+ * identification. */
+void setcomp(enum comp comp) {
+	proccomp = comp;
+	setprogname(comps[comp]);
+}
--- extern.h
+++ extern.h
@@ -286,5 +286,6 @@ extern int	 verbose;
  * What component is the process within (COMP__MAX for none)?
  */
 extern enum comp proccomp;
+void		 setcomp(enum comp);
 
 #endif /* ! EXTERN_H */
diff --git a/main.c b/main.c
--- main.c
+++ main.c
@@ -205,7 +205,7 @@ main(int argc, char *argv[])
 		err(EXIT_FAILURE, "fork");
 
 	if (pids[COMP_NET] == 0) {
-		proccomp = COMP_NET;
+		setcomp(COMP_NET);
 		close(key_fds[0]);
 		close(acct_fds[0]);
 		close(chng_fds[0]);
@@ -235,7 +235,7 @@ main(int argc, char *argv[])
 		err(EXIT_FAILURE, "fork");
 
 	if (pids[COMP_KEY] == 0) {
-		proccomp = COMP_KEY;
+		setcomp(COMP_KEY);
 		close(cert_fds[0]);
 		close(dns_fds[0]);
 		close(rvk_fds[0]);
@@ -257,7 +257,7 @@ main(int argc, char *argv[])
 		err(EXIT_FAILURE, "fork");
 
 	if (pids[COMP_ACCOUNT] == 0) {
-		proccomp = COMP_ACCOUNT;
+		setcomp(COMP_ACCOUNT);
 		close(cert_fds[0]);
 		close(dns_fds[0]);
 		close(rvk_fds[0]);
@@ -277,7 +277,7 @@ main(int argc, char *argv[])
 		err(EXIT_FAILURE, "fork");
 
 	if (pids[COMP_CHALLENGE] == 0) {
-		proccomp = COMP_CHALLENGE;
+		setcomp(COMP_CHALLENGE);
 		close(cert_fds[0]);
 		close(dns_fds[0]);
 		close(rvk_fds[0]);
@@ -295,7 +295,7 @@ main(int argc, char *argv[])
 		err(EXIT_FAILURE, "fork");
 
 	if (pids[COMP_CERT] == 0) {
-		proccomp = COMP_CERT;
+		setcomp(COMP_CERT);
 		close(dns_fds[0]);
 		close(rvk_fds[0]);
 		close(file_fds[1]);
@@ -312,7 +312,7 @@ main(int argc, char *argv[])
 		err(EXIT_FAILURE, "fork");
 
 	if (pids[COMP_FILE] == 0) {
-		proccomp = COMP_FILE;
+		setcomp(COMP_FILE);
 		close(dns_fds[0]);
 		close(rvk_fds[0]);
 		c = fileproc(file_fds[1], certdir, domain->cert, domain->chain,
@@ -332,7 +332,7 @@ main(int argc, char *argv[])
 		err(EXIT_FAILURE, "fork");
 
 	if (pids[COMP_DNS] == 0) {
-		proccomp = COMP_DNS;
+		setcomp(COMP_DNS);
 		close(rvk_fds[0]);
 		c = dnsproc(dns_fds[0]);
 		exit(c ? EXIT_SUCCESS : EXIT_FAILURE);
@@ -346,7 +346,7 @@ main(int argc, char *argv[])
 		err(EXIT_FAILURE, "fork");
 
 	if (pids[COMP_REVOKE] == 0) {
-		proccomp = COMP_REVOKE;
+		setcomp(COMP_REVOKE);
 		c = revokeproc(rvk_fds[0], domain->cert != NULL ? domain->cert :
 		    domain->fullchain, force, revocate,
 		    (const char *const *)alts, altsz);
--- /dev/null	2021-01-02 03:16:12.088471407 +0100
+++ setprogname.c	2021-01-08 19:26:23.110203641 +0100
@@ -0,0 +1,19 @@
+#ifndef HAVE_SETPROGNAME
+#include "bsd-stdlib.h"
+#include <string.h>
+
+#ifdef HAVE___PROGNAME
+extern const char *__progname;
+#endif
+
+void setprogname(const char *progname) {
+#ifdef HAVE___PROGNAME
+	char *slash = strrchr(progname, '/');
+	if (slash != NULL) {
+		__progname = slash + 1;
+	} else {
+		__progname = progname;
+	}
+#endif
+}
+#endif
